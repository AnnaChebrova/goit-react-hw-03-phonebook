{"version":3,"sources":["components/phonebook.module.css","components/ContactForm.js","components/Filter.js","components/ContactList.js","components/Phonebook.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","addContact","reset","onSubmit","this","className","styles","form","inputName","onChange","type","pattern","title","required","inputTel","btn","React","Component","Filter","ContactList","contacts","deleteContact","map","id","onClick","Phonebook","filter","find","contact","toLowerCase","toLocaleLowerCase","alert","shortid","generate","prevState","contactId","changeFilter","e","localStorage","getItem","JSON","parse","setItem","stringify","container","formSubmit","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.056fc1b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"phonebook_container___3Cg9\",\"form\":\"phonebook_form__2p_Q0\",\"inputName\":\"phonebook_inputName__35LTf\",\"inputTel\":\"phonebook_inputTel__ApGVP\",\"btn\":\"phonebook_btn__2_OWC\"};","import React from 'react';\r\nimport styles from './phonebook.module.css'\r\n\r\nclass ContactForm extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        this.setState({\r\n            [event.currentTarget.name]: event.currentTarget.value, });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.addContact(this.state.name, this.state.number);\r\n\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\nthis.setState({\r\n    name: '',\r\n    number: ''\r\n})\r\n    };\r\n    \r\n        render() {\r\n\r\n            return (\r\n\r\n<form onSubmit={this.handleSubmit} className={styles.form}>\r\n                <label> Name\r\n                    <input className={styles.inputName}\r\n                    value={this.state.name}\r\n                    onChange={this.handleInputChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                     />\r\n                </label>\r\n\r\n                <label> Tel\r\n                    <input className={styles.inputTel}\r\n                    value={this.state.number}\r\n                    onChange={this.handleInputChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\" className={styles.btn}>Add contact</button>\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default ContactForm;\r\n","import React, {Component} from 'react';\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label> Find contact by name\r\n<input type=\"text\" value={value} onChange={onChange}/>\r\n    </label>\r\n);\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst ContactList = ({contacts, deleteContact}) => (\r\n    <ul>\r\n        {contacts.map( ({id,name,number}) => (\r\n             \r\n            <li key={id}>\r\n                <p>{name} : {number}</p>\r\n                <button type=\"button\" onClick={() => deleteContact(id)}>\r\n                    delete contact\r\n                </button>\r\n            </li>\r\n        )) }\r\n             </ul>\r\n        )\r\n   \r\n\r\nexport default ContactList;","\r\nimport styles from './phonebook.module.css'\r\nimport React from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport shortid from 'shortid';\r\nimport Filter from './Filter';\r\nimport ContactList from './ContactList'\r\n\r\n\r\nclass Phonebook extends React.Component {\r\n\r\n    state = {\r\n        contacts: [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ],\r\n        filter: ''\r\n      };\r\n\r\n      componentDidMount() {\r\n          if (localStorage.getItem(\"contacts\")) {\r\n              this.setState({contacts: JSON.parse(localStorage.getItem(\"contacts\"))});\r\n          }\r\n      }\r\n\r\n      componentDidUpdate(prevState) {\r\n          if (this.setState.contacts !== prevState.contacts) {\r\n              localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n          }\r\n      }\r\n\r\n      addContact = (name, number) => {\r\n          if (this.state.contacts.find((contact) => name.toLowerCase()\r\n           === contact.name.toLocaleLowerCase())) {\r\n               alert(`${name} is already in list`);\r\n               return;\r\n           }\r\n           else if (name && number) {\r\n               const contact = {\r\n                   id: shortid.generate(), name, number};\r\n               this.setState(prevState => ({\r\n                   contacts: [contact, ... prevState.contacts],\r\n               }));\r\n           }\r\n      };\r\n\r\n      deleteContact = (contactId => {\r\n          this.setState(prevState => ({\r\n              contacts: prevState.contacts.filter(contact => contact.id !== contactId)}))\r\n      });\r\n\r\n      changeFilter = e => {\r\n          this.setState({filter: e.currentTarget.value})\r\n      }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm contacts={this.state.contacts} addContact={this.addContact} onSubmit={this.formSubmit}/>\r\n\r\n            <h2>Contacts</h2>\r\n            <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n            <ContactList contacts={this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))} deleteContact={this.deleteContact} />\r\n          </div>\r\n        )}\r\n        }\r\n\r\n\r\n\r\nexport default Phonebook;\r\n","import React from 'react';\r\nimport Phonebook from './components/Phonebook'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n        <Phonebook />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}